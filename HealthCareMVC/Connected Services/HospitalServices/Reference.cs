//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace HealthCareMVC.HospitalServices {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="HospitalServices.IHospitalServices")]
    public interface IHospitalServices {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IHospitalServices/GetAllHospitals", ReplyAction="http://tempuri.org/IHospitalServices/GetAllHospitalsResponse")]
        DataModels.Hospital[] GetAllHospitals();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IHospitalServices/GetAllHospitals", ReplyAction="http://tempuri.org/IHospitalServices/GetAllHospitalsResponse")]
        System.Threading.Tasks.Task<DataModels.Hospital[]> GetAllHospitalsAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IHospitalServices/GetHospitals", ReplyAction="http://tempuri.org/IHospitalServices/GetHospitalsResponse")]
        DataModels.Hospital[] GetHospitals(int userid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IHospitalServices/GetHospitals", ReplyAction="http://tempuri.org/IHospitalServices/GetHospitalsResponse")]
        System.Threading.Tasks.Task<DataModels.Hospital[]> GetHospitalsAsync(int userid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IHospitalServices/GetHospitalDetails", ReplyAction="http://tempuri.org/IHospitalServices/GetHospitalDetailsResponse")]
        DataModels.Hospital GetHospitalDetails(int userid, int hospitalid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IHospitalServices/GetHospitalDetails", ReplyAction="http://tempuri.org/IHospitalServices/GetHospitalDetailsResponse")]
        System.Threading.Tasks.Task<DataModels.Hospital> GetHospitalDetailsAsync(int userid, int hospitalid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IHospitalServices/AddHospital", ReplyAction="http://tempuri.org/IHospitalServices/AddHospitalResponse")]
        int AddHospital(DataModels.Hospital hospital);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IHospitalServices/AddHospital", ReplyAction="http://tempuri.org/IHospitalServices/AddHospitalResponse")]
        System.Threading.Tasks.Task<int> AddHospitalAsync(DataModels.Hospital hospital);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IHospitalServices/UpdateHospital", ReplyAction="http://tempuri.org/IHospitalServices/UpdateHospitalResponse")]
        int UpdateHospital(DataModels.Hospital hospital);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IHospitalServices/UpdateHospital", ReplyAction="http://tempuri.org/IHospitalServices/UpdateHospitalResponse")]
        System.Threading.Tasks.Task<int> UpdateHospitalAsync(DataModels.Hospital hospital);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IHospitalServices/DeleteHospital", ReplyAction="http://tempuri.org/IHospitalServices/DeleteHospitalResponse")]
        int DeleteHospital(int userid, int hospitalid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IHospitalServices/DeleteHospital", ReplyAction="http://tempuri.org/IHospitalServices/DeleteHospitalResponse")]
        System.Threading.Tasks.Task<int> DeleteHospitalAsync(int userid, int hospitalid);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IHospitalServicesChannel : HealthCareMVC.HospitalServices.IHospitalServices, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class HospitalServicesClient : System.ServiceModel.ClientBase<HealthCareMVC.HospitalServices.IHospitalServices>, HealthCareMVC.HospitalServices.IHospitalServices {
        
        public HospitalServicesClient() {
        }
        
        public HospitalServicesClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public HospitalServicesClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public HospitalServicesClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public HospitalServicesClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public DataModels.Hospital[] GetAllHospitals() {
            return base.Channel.GetAllHospitals();
        }
        
        public System.Threading.Tasks.Task<DataModels.Hospital[]> GetAllHospitalsAsync() {
            return base.Channel.GetAllHospitalsAsync();
        }
        
        public DataModels.Hospital[] GetHospitals(int userid) {
            return base.Channel.GetHospitals(userid);
        }
        
        public System.Threading.Tasks.Task<DataModels.Hospital[]> GetHospitalsAsync(int userid) {
            return base.Channel.GetHospitalsAsync(userid);
        }
        
        public DataModels.Hospital GetHospitalDetails(int userid, int hospitalid) {
            return base.Channel.GetHospitalDetails(userid, hospitalid);
        }
        
        public System.Threading.Tasks.Task<DataModels.Hospital> GetHospitalDetailsAsync(int userid, int hospitalid) {
            return base.Channel.GetHospitalDetailsAsync(userid, hospitalid);
        }
        
        public int AddHospital(DataModels.Hospital hospital) {
            return base.Channel.AddHospital(hospital);
        }
        
        public System.Threading.Tasks.Task<int> AddHospitalAsync(DataModels.Hospital hospital) {
            return base.Channel.AddHospitalAsync(hospital);
        }
        
        public int UpdateHospital(DataModels.Hospital hospital) {
            return base.Channel.UpdateHospital(hospital);
        }
        
        public System.Threading.Tasks.Task<int> UpdateHospitalAsync(DataModels.Hospital hospital) {
            return base.Channel.UpdateHospitalAsync(hospital);
        }
        
        public int DeleteHospital(int userid, int hospitalid) {
            return base.Channel.DeleteHospital(userid, hospitalid);
        }
        
        public System.Threading.Tasks.Task<int> DeleteHospitalAsync(int userid, int hospitalid) {
            return base.Channel.DeleteHospitalAsync(userid, hospitalid);
        }
    }
}
